Randomize default player ID from a long list of fun names
 Save player ID in local storage
 Show player IDs in score table

More visual feedback on network operations
 Exploit then() callback on publication promise:
   Text default color is bright-red (unless number of players = 1, in which case it's black)
    Visual feedback when promise fulfilled: text fades from bright-red to somewhat-red
 Receiving nodes on channels gives visual feedback:
   Visual feedback when node received in peer message: text fades to faintly-red
   Visual feedback when node received in message from player 1: text fades to black

Private nodes, whose immediate text children (preamble, placeholder, terminals) are only visible to owner

Role assignment ideas:
 Allow sym_modifiers in grammar (NontermReference in code) to specify a role that overrides nonterminal role
  e.g. "@battle#2" or "@test#3;"
 In Node constructor, parentRole should be replaced by olderSiblingOrParentRole
  i.e. "#=", "#+" and "#-" should be relative to older sibling's role, where available
  this makes for a fairer distribution of turns

Allow weights on human-played rules, determining (a) if rule is visible, (b) what order rules are presented in
 Syntax: "weight_expr => hint => rhs_symbols"

Extend $variable[$#] pseudo-array syntax to allow any index, dynamically computed
  This will require a new kind of ParamAssignment e.g. ArrayParamAssignment, where array index is a ParamFunc
   Ditto a new kind of ParamReference e.g. ArrayParamReference

Role names
 e.g. "roles {Optimist Pessimist}" as alternative syntax to "roles 2"
  can then refer to roles by name e.g. "#Optimist" instead of "#1"
 Drag-and-drop editable role list for Editor
  auto-replace of role names throughout text, when edited

Add missing auto-renaming functionality to Editor (ParamAssignments & ParamReferences in rhs of rules)
